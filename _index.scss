//                                       _ _
//                                      (_) |
//  ___  __ _ ___ ___ ______ _   _ _ __  _| |_
// / __|/ _` / __/ __|______| | | | '_ \| | __|
// \__ \ (_| \__ \__ \      | |_| | | | | | |_
// |___/\__,_|___/___/       \__,_|_| |_|_|\__|

//
// check type
//

@function is-number($args...) {
  @each $arg in $args { @if type-of($arg) != 'number' { @return false; } }
  @return true;
}

@function is-string($args...) {
  @each $arg in $args { @if type-of($arg) != 'string' { @return false; } }
  @return true;
}

@function is-list($args...) {
  @each $arg in $args { @if type-of($arg) != 'list' { @return false; } }
  @return true;
}

@function is-map($args...) {
  @each $arg in $args { @if type-of($arg) != 'map' { @return false; } }
  @return true;
}

//
// check subtype
//

@function is-zero($args...) {
  @if not is-number($args...) { @return false; }
  @each $arg in $args { @if __strip($arg) != 0 { @return false; } }
  @return true;
}

@function is-unitless($args...) {
  @if not is-number($args...) { @return false; }
  @each $arg in $args { @if not unitless($arg) { @return false; } }
  @return true;
}

@function is-relative($args...){
  @if not is-number($args...) { @return false; }
  @each $arg in $args { @if not index('%' 'ex' 'rem' 'em' 'vh' 'vw' 'vmin' 'vmax', unit($arg)) { @return false; } }
  @return true;
}

@function is-absolute($args...){
  @if not is-number($args...) { @return false; }
  @each $arg in $args { @if index('%' 'ex' 'rem' 'em' 'vh' 'vw' 'vmin' 'vmax', unit($arg)) or unitless($arg) { @return false; } }
  @return true;
}

@function has-unit($unit, $args...) {
  @if not is-number($args...) { @return false; }
  @each $arg in $args { @if not unit($arg) == $unit { @return false; } }
  @return true;
}

//
// manipulate units
//

@function one($unit:'') {
  $one: ('em': 1em, 'ex': 1ex, 'ch': 1ch, 'rem': 1rem, '%': 1%, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax, 'cm': 1cm, 'mm': 1mm, 'in': 1in, 'px': 1px, 'pt': 1pt, 'pc': 1pc, 'deg': 1deg, 'grad': 1grad, 'rad': 1rad, 'turn': 1turn, 's': 1s, 'ms': 1ms, 'dpi': 1dpi, 'dpcm': 1dpcm, 'dppx': 1dppx);
  @return map-get($one, $unit) or 1;
}

@function strip($n) {
  @if not is-number($n) { @return error("cannot manipulate unit of non-number"); }
  @return if(unitless($n), $n, $n / one(unit($n)));
}

@function assert($n, $unit: '') {
  @if not is-number($n) { @return error("cannot manipulate unit of non-number"); }
  @return strip($n) * one($unit);
}

@function strip-alt($n){
  @if not is-number($n) { @return error("cannot manipulate unit of non-number"); }
  @return if(unitless($n), $n, $n / (0 * $n + 1));
}
